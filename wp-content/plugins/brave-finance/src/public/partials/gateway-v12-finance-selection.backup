<?php
/**
 * Handle the HTML for the V12 gateway selection during payment
 *
 * @link       http://www.wearebfi.co.uk
 * @since      1.0.0
 *
 * @package    BFI_Woocommerce_V12_Finance
 * @subpackage BFI_Woocommerce_V12_Finance/public/partials
 */
// set the selected item (or first item)
list($selected_fprod) = array_keys($finance_products);


$deposit_amount = filter_input(INPUT_POST, 'v12_deposit_amount') ? filter_input(INPUT_POST, 'v12_deposit_amount') : $deposit_amount;
 
?>
<style>
    #finance-option-container #step-2 div.input * + *{
        margin-left: 0 !important;;
    }
</style>
<div id="finance-option"> 
    <span id="finance-review-text">
        <p>Please use our calculator below to help you see what finance options are available. <strong>To apply for finance, please select this option at the checkout.</strong></p>
    </span>
    <div id="finance-option-container" class="clearfix">
        <!-- Step One -->
        <div id="step-1" class="finance-option first clearfix">
            <h6><span>Step 1:</span>Choose your finance option</h6>
            <p>Please specify the finance option that you wish to choose.</p>
            <label for="v12-finance-option" class="required"><?php echo __('Finance Option', 'woocommerce_v12retailfinance'); ?></label>
            <div class="input">
                <select name="v12_finance_option" id="v12-finance-option">
                    <?php foreach ($finance_products as $fkey => $fproduct): ?>
                        <option value="<?php echo $fkey; ?>"<?php if ($selected_fprod == $fkey): ?> selected<?php endif; ?>><?php echo $fproduct->name; ?></option>
                    <?php endforeach; ?>
                </select>
            </div>
        </div>
        <!-- Step Two -->

        <div id="step-2" class="finance-option last clearfix">

            <h6><span>Step 2:</span>Choose your deposit amount</h6>

            <?php if (isset($variable_deposit) && $variable_deposit == 'yes'): ?>
                <p>Please specify the deposit amount that you wish to pay.</p>

                <label for="v12_deposit_amount" class="required">Deposit Amount (<?php echo get_woocommerce_currency_symbol(); ?>):</label>
                <div class="input">
                    <input type="text" name="v12_deposit_amount" id="v12-deposit-amount" value="<?php echo number_format($deposit_amount, 2, '.', ''); ?>"> <button type="button" id="brave-refresh">Update</button>
                </div>
            <?php else: ?>
                <div class="input">
                    <input type="hidden" name="v12_deposit_amount" id="v12-deposit-amount" value="<?php echo number_format($deposit_amount, 2, '.', ''); ?>">
                </div>
            <?php endif; ?>
            <p class="small-print">The accepted value is between <strong><?php echo get_woocommerce_currency_symbol(); ?><?php echo number_format($min_deposit_amount, 2, '.', ''); ?></strong> and <strong><?php echo get_woocommerce_currency_symbol(); ?><?php echo number_format($max_deposit_amount, 2); ?></strong></p>

        </div>

    </div> 
    <p><strong>Please view the available finance details below.</strong></p>

    <?php
    // work out the bits we need for finance
    $loan_total = $order_total - $deposit_amount;
    $interest_rate = $finance_products[$selected_fprod]->apr;

    if ($finance_products[$selected_fprod]->apr == 0) {
        // Interest Free
        $interest = 0;
        $monthly_payment = number_format($loan_total / $finance_products[$selected_fprod]->months, 2, '.', '');

        // allow for any discrepencies
        if ($monthly_payment * $finance_products[$selected_fprod]->months > $loan_total) {
            $payment_total = $monthly_payment * ($finance_products[$selected_fprod]->months - 1);
            $monthly_payment = number_format($loan_total - $payment_total, 2, '.', '');
        }
    } else {  

        // APR rate
        $interest = (($finance_products[$selected_fprod]->apr / 100) * $loan_total);
        $interest_month = $interest / $finance_products[$selected_fprod]->months;
        $load_month = ($loan_total / $finance_products[$selected_fprod]->months) + $interest_month;
        $monthly_payment = number_format($load_month , 2, ".", "");
    }

    // set the appropriate values in the description
    $fdescription = $finance_products[$selected_fprod]->description;

    $tokens = array(
        'LOAN' => number_format($loan_total, 2, '.', ''),
        'INTEREST_RATE' => $interest_rate,
        'INSTALMENT' => $monthly_payment,
        'TERM' => $finance_products[$selected_fprod]->months,
        'CHARGE_FOR_CREDIT' => number_format($interest, 2, '.', ''),
        'TOTAL_PAYABLE' => number_format($loan_total + $interest, 2, '.', ''),
        'APR' => number_format($finance_products[$selected_fprod]->apr, 2, '.', ''),
        'BNPLPeriod' => $finance_products[$selected_fprod]->deferred_period,
        'TOTALTERM' => $finance_products[$selected_fprod]->deferred_period + $finance_products[$selected_fprod]->months,
        'ARRANGEMENTFEE' => number_format($finance_products[$selected_fprod]->service_fee, 2, '.', ''),
        'SETTLEMENTFEE' => number_format($finance_products[$selected_fprod]->settlement_fee, 2, '.', ''),
    );
    if (!empty($finance_products[$selected_fprod]->deferred_period)) {
        $tokens['BNPLPeriod'] = $finance_products[$selected_fprod]->deferred_period;
        $tokens['BNPL_ARRANGEMENT_FEEE'] = number_format($finance_products[$selected_fprod]->service_fee, 2, '.', '');
    }
    foreach ($tokens as $token => $value) {
        $fdescription = str_replace("$" . $token . "$", $value, $fdescription);
    }
    ?>

    <div id="v12_option_desc-container">

        <div id="v12-product-desc"><?php echo $fdescription; ?></div>

        <table>
            <tr>
                <td class="label"><strong>APR</strong></td>
                <td><span id="v12-apr"><?php echo number_format($finance_products[$selected_fprod]->apr, 2, '.', ''); ?>%</span></td>
            </tr>
            <tr class="even">
                <td class="label"><strong>Installment Amount</strong></td>
                <td><?php echo get_woocommerce_currency_symbol(); ?><span id="v12-monthly-payment"><?php echo $monthly_payment; ?></span>/<?php echo __('month', 'woocommerce_v12retailfinance'); ?></td>
            </tr>
            <tr>
                <td class="label"><strong>Repayment Term</strong></td>
                <td><span id="v12-months"><?php echo $finance_products[$selected_fprod]->months; ?></span> <?php echo __('months', 'woocommerce_v12retailfinance'); ?></td>
            </tr>
            <tr class="even">
                <td class="label"><strong>Total Interest Charged</strong></td>
                <td><?php echo get_woocommerce_currency_symbol(); ?><span id="v12-interest"><?php echo number_format($interest, 2, '.', ''); ?></span></td>
            </tr>
            <tr>
                <td class="label"><strong>Deposit Amount</strong></td>
                <td><?php echo get_woocommerce_currency_symbol(); ?><span id="v12-deposit"><?php echo number_format($deposit_amount, 2, '.', ''); ?></span></td>
            </tr>
        </table>

    </div>
</div>
<script>
    jQuery(function ($) {
        function number_format(number, decimals, dec_point, thousands_sep) {

            number = (number + '')
                    .replace(/[^0-9+\-Ee.]/g, '');
            var n = !isFinite(+number) ? 0 : +number,
                    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                    s = '',
                    toFixedFix = function (n, prec) {
                        var k = Math.pow(10, prec);
                        return '' + (Math.round(n * k) / k)
                                .toFixed(prec);
                    };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))
                    .split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '')
                    .length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1)
                        .join('0');
            }
            return s.join(dec);
        }

        function str_replace(search, replace, subject, count) {

            var i = 0,
                    j = 0,
                    temp = '',
                    repl = '',
                    sl = 0,
                    fl = 0,
                    f = [].concat(search),
                    r = [].concat(replace),
                    s = subject,
                    ra = Object.prototype.toString.call(r) === '[object Array]',
                    sa = Object.prototype.toString.call(s) === '[object Array]';
            s = [].concat(s);
            if (count) {
                this.window[count] = 0;
            }

            for (i = 0, sl = s.length; i < sl; i++) {
                if (s[i] === '') {
                    continue;
                }
                for (j = 0, fl = f.length; j < fl; j++) {
                    temp = s[i] + '';
                    repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];
                    s[i] = (temp)
                            .split(f[j])
                            .join(repl);
                    if (count && s[i] !== temp) {
                        this.window[count] += (temp.length - s[i].length) / f[j].length;
                    }
                }
            }
            return sa ? s : s[0];
        }

        function update_finance() {
            var user_deposit = $('#v12-deposit-amount').val();
            var user_product = $('#v12-finance-option').val();
            // check user has picked a valid product
            if (user_product in v12_products) {
                var min_amount = v12_settings['order_total'] - v12_products[user_product]['wc_max_loan'];
                if (min_amount < 0) {
                    min_amount = v12_settings.deposit.min_amount;
                }
                var max_amount = v12_settings['order_total'] - v12_products[user_product]['wc_min_loan'];
                if (max_amount < 0) {
                    max_amount = v12_settings.deposit.max_amount;
                }
                $('#v12-min-deposit').html(min_amount.toFixed(2));
                $('#v12-max-deposit').html(max_amount.toFixed(2));
                // check if the deposit is within range
                if (user_deposit >= min_amount && user_deposit <= max_amount) {
                    // work out the new values and update the page
                    var apr = v12_products[user_product]['apr'];
                    var loan_total = v12_settings.order_total - user_deposit;
                    var interest_rate = number_format(v12_products[user_product]['monthly_rate'] * 12, 2);
                    var interest = 0;
                    var monthly_payment = 0;
                    if (v12_products[user_product]['apr'] == 0) {
                        // Interest Free
                        monthly_payment = number_format(loan_total / v12_products[user_product]['months'], 2);
                        // allow for any discrepencies
                        if (monthly_payment * v12_products[user_product]['months'] > loan_total) {
                            var payment_total = monthly_payment * (v12_products[user_product]['months'] - 1);
                            monthly_payment = number_format(loan_total - payment_total, 2);
                        }
                    } else {
                        
                          interest = ((v12_products[user_product]['apr'] / 100) * loan_total);
                          var interest_month = interest / v12_products[user_product]['months'];
                          var load_month = (loan_total / v12_products[user_product]['months']) + interest_month;
                          monthly_payment = number_format(load_month , 2);
                        
                   }

                    // set the appropriate values in the description
                    var fdescription = v12_products[user_product]['description'];
                    var total_term = parseInt(v12_products[user_product]['deferred_period']) + parseInt(v12_products[user_product]['months']);
                    var tokens = {
                        'LOAN': number_format(loan_total, 2),
                        'INTEREST_RATE': interest_rate,
                        'INSTALMENT': monthly_payment,
                        'TERM': v12_products[user_product]['months'],
                        'CHARGE_FOR_CREDIT': number_format(interest, 2),
                        'TOTAL_PAYABLE': number_format(loan_total + interest, 2),
                        'APR': number_format(v12_products[user_product]['apr'], 2),
                        'BNPLPeriod': v12_products[user_product]['deferred_period'],
                        'TOTALTERM': total_term,
                        'ARRANGEMENTFEE': number_format(v12_products[user_product]['service_fee'], 2),
                        'SETTLEMENTFEE': number_format(v12_products[user_product]['settlement_fee'], 2)
                    };
                    if (v12_products[user_product]['deferred_period'] > 0) {
                        tokens['BNPLPeriod'] = v12_products[user_product]['deferred_period'];
                        tokens['BNPL_ARRANGEMENT_FEEE'] = number_format(v12_products[user_product]['service_fee'], 2);
                    }
                    for (var token in tokens) {
                        fdescription = str_replace("$" + token + "$", tokens[token], fdescription);
                    }

                    $('#v12-apr').html(number_format(v12_products[user_product]['apr'], 2) + '%');
                    $('#v12-monthly-payment').html(monthly_payment);
                    $('#v12-months').html(v12_products[user_product]['months']);
                    $('#v12-interest').html(number_format(interest, 2));
                    $('#v12-deposit').html(number_format(user_deposit, 2));
                    $('#v12-product-desc').html(fdescription);
                } else {
                    alert('Please enter a deposit between ' + min_amount.toFixed(2) + ' and ' + max_amount.toFixed(2));
                }
            } else {
                alert('Please choose a valid Finance Product');
            }
        }

        // now update the amounts based on changes to product / deposit
        $('#v12-finance-option').on('change', function (e) {
            update_finance();
        });
        $('#brave-refresh').on('click', function (e) {
            update_finance();
        });
        $('#finance-available').on('click', function (event) {
            event.preventDefault();
            $('.description_tab').removeClass('active');
            $('.additional_information_tab').removeClass('active');
            $('.reviews_tab').removeClass('active');
            $('#tab-description').css("display", "none");
            $('#tab-additional_information').css("display", "none");
            $('#tab-reviews').css("display", "none");
            $('.finance_tab_tab').addClass('active');
            $("#tab-finance_tab").css("display", "block")
            $('html, body').animate({scrollTop: $('#tab-finance_tab').position().top}, 'slow')
        });
        $('body').on('updated_checkout', function () {
            $('#v12-finance-option').on('change', function (e) {
                update_finance();
            });
            $('#v12-refresh').on('click', function (e) {
                update_finance();
            });
        });
    });

</script>